openapi: 3.0.3
info:
  title: Library API
  version: 1.1.0
  description: STD21071
servers:
  - url: https://library.com
tags:
  - Books
  - Authors 
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: startDateTime
          description: ....
          schema:
            type: string
            format: date
          required: false
        - in: query
          name: endDateTime
          description: ....
          schema:
            type: string
            format: date
          required: false
                  
    put:
      tags:
       - Books
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    post:
      tags:
        - Books
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /authors:
    get:
      tags:
       - authors
      summary: Get authors
      description: Filter authors by name
      operationId: getAuthors
      parameters:
        - in: query
          name: name
          description: Filter authors by name
          required: false
          schema:
            type: string
      responses:
        200:
          description: List of authors filtered 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author'
    put:
      tags:
       - authors    
      summary: Update authors
      description: Update a list of authors
      operationId: UpdateAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/author'
      responses:
        200:
          description: List of authors updated 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author' 
  /authors/{authorId}:
    delete:
      tags:
       - authors
      summary: Delete author
      description: Delete a specific author
      operationId: deleteAuthor
      parameters:
        - in: path
          name: authorId
          description: ID of the author to delete
          required: true
          schema:
            type: string
      responses:
        200:
          description: Author deleted successfully

components:
  schemas:
    Book:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/author'
      allOf:
        - $ref: '#/components/schemas/crupdateBooks'
     
    
    author:
      type: object
      properties:
        id:
          type: string
        name: 
          type: string
        sex:
         $ref: '#/components/schemas/Sex'
    Sex:
        type: string
        enum:
            - M
            - F  
    Topic:
        type: string
        enum:
            - ROMANCE
            - COMEDY
            - OTHER
    Page:
      type: integer
      description: Start at `1`
    PageSize:
      type: integer
      description: Cannot exceed `500`
    crupdateBooks: 
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        topic:
            $ref: '#/components/schemas/Topic'
        
        pageNumbers:
          $ref: '#/components/schemas/PageSize'
        releaseDate:
          type: string
          format: date

        



